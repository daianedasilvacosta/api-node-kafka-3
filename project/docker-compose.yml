# version: '3.8'
# services:
#   zookeeper:
#     container_name: zookeeper
#     image: wurstmeister/zookeeper
#     ports:
#       - "2181:2181"

#   kafka:
#     container_name: kafka
#     image: wurstmeister/kafka
#     ports:
#       - "9092:9092"
#     environment:
#       KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
#       KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#       KAFKA_CREATE_TOPICS: "topic1:1:1,topic2:1:1"

#   mongo:
#     container_name: mongo
#     image: mongo
#     ports:
#       - "27017:27017"
#     volumes: 
#       - ./data/mongo:/data/db

#   postgres:
#     container_name: postgres
#     image: postgres
#     ports:
#       - "5432:5432"
#     volumes:
#       - ./data/postgres:/var/lib/postgresql/data
#     environment:
#       POSTGRES_USER: postgres
#       POSTGRES_PASSWORD: postgres
#       POSTGRES_DB: postgres

#   app1:
#     container_name: app1
#     build: ./app1
#     image: app1
#     ports: 
#       - "8080:8080"
#     volumes:
#       - ./app1:/app
#     environment:
#       - PORT=8080
#       - POSTGRES_URL=postgres://postgres:postgres@postgres:5432/postgres
#       - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
#       - KAFKA_TOPIC=topic1
#     depends_on:
#       - postgres
#       - kafka

#   app2:
#     container_name: app2
#     build: ./app2
#     image: app2
#     ports: 
#       - "8081:8081"
#     volumes:
#       - ./app2:/app
#     environment:
#       - PORT=8081
#       - MONGO_URL=mongodb://mongo:27017/app2
#       - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
#       - KAFKA_TOPIC=topic2
#     depends_on:
#       - mongo
#       - kafka

version: '3.8'
services:
  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"

  kafka:
    container_name: kafka
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper

  postgres:
    container_name: postgres
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - ./data/postgres:/var/lib/postgresql/data

  mongo:
    container_name: mongo
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - ./data/mongo:/data/db

  app1:
    container_name: app1
    build: ./app1
    ports:
      - "8080:8080"
    environment:
      PORT: 8080
      POSTGRES_URL: postgres://postgres:postgres@postgres:5432/postgres
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_TOPIC: topic1
    depends_on:
      - postgres
      - kafka

  app2:
    container_name: app2
    build: ./app2
    ports:
      - "8081:8081"
    environment:
      PORT: 8081
      MONGO_URL: mongodb://mongo:27017/app2
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_TOPIC: topic1
    depends_on:
      - mongo
      - kafka

  influxdb:
    container_name: influxdb
    image: influxdb:latest
    ports:
      - "8086:8086"
    volumes:
      - ./data/influxdb:/var/lib/influxdb

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - ./data/grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin

  telegraf:
    container_name: telegraf
    image: telegraf:latest
    depends_on:
      - influxdb
    volumes:
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro

